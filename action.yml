name: Claude Renovate Review
description: "Review Renovate PRs using Claude Code"

inputs:
  github-token:
    description: "GitHub token with repo and pull request permissions."
    default: ${{ github.token }}
    required: false
  create-comment:
    description: "Create the review result as a comment on the pull request."
    default: 'true'
    required: false
  pull-request-number:
    description: |
      The number of the pull request to review.
      If not provided, it will use the pull request number from the event context.
    required: false
  anthropic-api-key:
    description: "Anthropic API key for Claude Code."
    required: false
  claude-code-oauth-token:
    description: "Claude Code OAuth token (alternative to anthropic-api-key)."
    required: false
  allowed-tools:
    description: |
      Newline-separated list of allowed tools for Claude Code.
      Each tool should be on a separate line.
    default: |
      WebFetch(domain:github.com)
      WebFetch(domain:raw.githubusercontent.com)
    required: false

outputs:
  report:
    description: "The review report generated by Claude Code"
    value: ${{ steps.result.outputs.value }}

runs:
  using: composite
  steps:
    - name: Get the pull request number
      id: pr-number
      shell: bash
      env:
        PR_NUMBER: ${{ inputs.pull-request-number == '' && github.event.pull_request.number || inputs.pull-request-number }}
      run: |
        if [ -z "$PR_NUMBER" ]; then
          echo "::error::Please provide a pull request number."
          exit 1
        fi
        echo "value=$PR_NUMBER" >> "$GITHUB_OUTPUT"

    - name: Check api keys
      shell: bash
      env:
        ANTHROPIC_API_KEY: ${{ inputs.anthropic-api-key }}
        CLAUDE_CODE_OAUTH_TOKEN: ${{ inputs.claude-code-oauth-token }}
      run: |
        if [ -z "$ANTHROPIC_API_KEY" ] && [ -z "$CLAUDE_CODE_OAUTH_TOKEN" ]; then
          echo "::error::Please provide either an anthropic-api-key or a claude-code-oauth-token."
          exit 1
        fi

    - name: Get pull request details
      id: pr
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ steps.pr-number.outputs.value }}
      shell: bash
      run: |
        gh pr view --repo "$GITHUB_REPOSITORY" "$PR_NUMBER" --json title,body > "$RUNNER_TEMP/pr.json"

        EOF=$(uuidgen)
        {
          echo "title=$(jq -r .title "$RUNNER_TEMP/pr.json")"
          echo "number=$PR_NUMBER"

          echo "body<<$EOF"
          jq -r .body "$RUNNER_TEMP/pr.json"
          echo "$EOF"
        } >> "$GITHUB_OUTPUT"

    - name: Convert tools to comma-separated
      id: tools
      shell: bash
      env:
        ALLOWED_TOOLS: ${{ inputs.allowed-tools }}
      run: |
        echo "allowed=$(node --eval "console.log(process.env.ALLOWED_TOOLS.trim().split('\n').map(line => line.trim()).concat('Bash(gh pr diff:*)').join(','))")" >> "$GITHUB_OUTPUT"

    - uses: anthropics/claude-code-action/base-action@15db2b3c79c0681556c056e9bc3f61fd3fc0347d # v0.0.54
      id: claude
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        anthropic_api_key: ${{ inputs.anthropic-api-key }}
        claude_code_oauth_token: ${{ inputs.claude-code-oauth-token }}
        allowed_tools: ${{ steps.tools.outputs.allowed }}
        prompt: |
          ## Your Role

          Conduct a detailed review of the Renovate Pull Request and evaluate the safety of merging.

          **IMPORTANT**: Do not execute local tests or build commands. This review should be conducted based solely on static analysis of changes, release notes, and impact assessment.

          ### Context

          <pull_request>
          <number>${{ steps.pr.outputs.number }}</number>
          <title>${{ steps.pr.outputs.title }}</title>
          <body>
          ${{ steps.pr.outputs.body }}
          </body>
          </pull_request>

          ### Execution Steps

          1. **Pull Request Analysis**
              - Review the Pull Request information provided as context
              - Retrieve the Pull Request diff using `gh pr diff ${{ steps.pr.outputs.number }}`
              - Identify target packages and version changes

          2. **Release Content Investigation**
              - Review release notes and CHANGELOG of the target package
              - Understand breaking changes, new features, and bug fixes
              - Check for security-related fixes

          3. **Codebase Impact Analysis**
              - Search for usage locations of the target package in the current codebase
              - Verify the need for modifications due to API changes
              - Investigate impact on other packages due to dependency changes
              - Check impact on configuration files and environment settings

          4. **Safety Assessment (3 Levels)**
              - **Safe**: Backward compatibility is maintained, immediately mergeable
              - **Needs Manual Migration**: Manual code fixes or configuration changes required
              - **Not Safe**: Major breaking changes or security risks present

          ### Report Format

          ```markdown
          ## Renovate PR Review Results

          ### ‚öñÔ∏è Safety Assessment: [‚úÖ Safe | ‚ö†Ô∏è Needs Manual Migration | ‚ùå Not Safe]

          ### üîç Release Content Analysis
          - [Major changes]
          - [Breaking changes]
          - [Security fixes]

          ### üéØ Impact Scope Investigation
          - [Usage location identification results]
          - [Impact on other dependencies]

          ### üí° Recommended Actions
          - [Required modification work]
          - [Specific response methods]

          ### üîó Reference Links
          - [Release notes]
          - [CHANGELOG]
          ```

    - name: Get Claude Code Result
      shell: bash
      id: result
      env:
        CLAUDE_CODE_EXECUTION_FILE: ${{ steps.claude.outputs.execution_file }}
      run: |
        EOF=$(uuidgen)
        {
          echo "value<<$EOF"
          node "$GITHUB_ACTION_PATH/extract.js"
          echo "$EOF"
        } >> "$GITHUB_OUTPUT"

    - name: Summary
      shell: bash
      env:
        REPORT: ${{ steps.result.outputs.value }}
      run: echo "$REPORT" >> "$GITHUB_STEP_SUMMARY"

    - uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
      if: ${{ inputs.create-comment == 'true' }}
      id: find-comment
      with:
        token: ${{ inputs.github-token }}
        issue-number: ${{ steps.pr.outputs.number }}
        body-includes: '<!-- CLAUDE_RENOVATE_REVIEW -->'
    - uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
      if: ${{ inputs.create-comment == 'true' }}
      with:
        token: ${{ inputs.github-token }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        edit-mode: replace
        issue-number: ${{ steps.pr.outputs.number }}
        body: |
          <!-- CLAUDE_RENOVATE_REVIEW -->

          ${{ steps.result.outputs.value }}
